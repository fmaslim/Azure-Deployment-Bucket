{"version":3,"sources":["C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/$_lazy_route_resource lazy","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/Directives/jokeDir.directive.ts","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/app.component.css","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/app.component.html","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/app.component.ts","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/app.module.ts","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/header/header.component.css","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/header/header.component.html","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/header/header.component.ts","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/http-jsonp/http-jsonp.component.css","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/http-jsonp/http-jsonp.component.html","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/http-jsonp/http-jsonp.component.ts","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/http-observable/http-observable.component.css","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/http-observable/http-observable.component.html","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/http-observable/http-observable.component.ts","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/http-promise/http-promise.component.css","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/http-promise/http-promise.component.html","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/http-promise/http-promise.component.ts","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/http/http.component.css","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/http/http.component.html","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/http/http.component.ts","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/injector-provider/injector-provider.component.css","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/injector-provider/injector-provider.component.html","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/injector-provider/injector-provider.component.ts","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/injector/injector.component.css","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/injector/injector.component.html","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/injector/injector.component.ts","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/joke-form/joke-form.component.css","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/joke-form/joke-form.component.html","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/joke-form/joke-form.component.ts","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/joke/joke.component.css","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/joke/joke.component.html","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/joke/joke.component.ts","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/model-driven-form/model-driven-form.component.css","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/model-driven-form/model-driven-form.component.html","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/model-driven-form/model-driven-form.component.ts","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/nav-home/nav-home.component.css","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/nav-home/nav-home.component.html","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/nav-home/nav-home.component.ts","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/rx-observable/rx-observable.component.css","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/rx-observable/rx-observable.component.html","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/rx-observable/rx-observable.component.ts","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/template-driven-form/template-driven-form.component.css","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/template-driven-form/template-driven-form.component.html","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/template-driven-form/template-driven-form.component.ts","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/environments/environment.ts","C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { Directive, ElementRef, Renderer, HostListener } from '@angular/core';\n\n// What's the use of a directive?\n\n// There are 3 kinds of directives:\n// 1. Components - directives with a template.\n// 2. Structural directives - change the DOM layout by adding and removing DOM elements.\n// 3. Attribute directives - change the appearance or behavior of an element, component, or another directive.\n\n// Why do we use directive then?\n// A directive is essentially a function executed when the Angular compiler finds its declaration in the DOM.\n// The function can do almost anything, but as a common task, we can consider defining a behavior or\n// executing a DOM transformation.\n\n@Directive({\n  selector: '[appJokeDir]'\n})\nexport class JokeDirDirective {\n\n  // This is the default constructor generated by the template\n  // constructor() { }\n\n  // Per suggestion by the book, Angular can use Dependency Injection to inject\n  // an instance of something called ElementRef into the constructor\n  constructor (private elm: ElementRef, private renderer: Renderer) {\n    // ElementRef gives the constructor direct access to the DOM element upon which this Directive is attached\n    // Angular uses Renderer to set properties of the element, and by providing it here, Angular can use Dependency Injection\n    // to inject an instance of Renderer into the constructor.\n    // Therefore, instead of directly changing the DOM, Angular does it through the Renderer\n\n    // renderer.setElementStyle(elm.nativeElement, 'backgroundColor', 'gray');\n  }\n\n  @HostListener('mouseover') onmouseover() {\n    const part = this.elm.nativeElement.querySelector('.directive-class');\n    this.renderer.setElementStyle(part, 'display', 'block');\n  }\n\n  @HostListener('mouseout') onmouseout() {\n    const part = this.elm.nativeElement.querySelector('.directive-class');\n    this.renderer.setElementStyle(part, 'display', 'none');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/Directives/jokeDir.directive.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, ViewChild, ElementRef, ContentChild, ContentChildren, AfterViewInit, AfterContentInit } from '@angular/core';\r\nimport { JokeComponent, Joke } from './joke/joke.component';\r\n\r\n// Decorator\r\nfunction lesson (target) {\r\n  // This is used to dynamically add a property to the target class that this decorates.\r\n  // In this case, it adds a function called lesson into the target class, and returns a string \"Angular 2\"\r\n  Object.defineProperty(target.prototype, 'lesson', {value: () => 'Angular 2'});\r\n}\r\n\r\ninterface IHuman {\r\n  hasLegs: boolean;\r\n  hasHands: boolean;\r\n\r\n  name?: Function;\r\n  isLate?(time: Date): Function;\r\n\r\n}\r\n\r\n// Adding a new class\r\nclass Person implements IHuman {\r\n  firstName = 'John';\r\n  lastName = 'Doe';\r\n  hasHands = true;\r\n  hasLegs = true;\r\n\r\n  constructor (firstname, lastname) {\r\n    this.firstName = firstname;\r\n    this.lastName = lastname;\r\n  }\r\n\r\n  name() {\r\n    return `${this.firstName} ${this.lastName}`;\r\n  }\r\n\r\n  whoAreYou() {\r\n    return `Hi, I'm ${this.name()}`;\r\n  }\r\n}\r\n\r\n@lesson\r\nclass Student extends Person {\r\n  course: string;\r\n\r\n  constructor (firstname, lastname, course) {\r\n    super(firstname, lastname);\r\n    this.course = course;\r\n  }\r\n\r\n  whoAreYou() {\r\n    return `${super.whoAreYou()} and I'm studying ${this.course}`;\r\n  }\r\n}\r\n\r\n// How do we pass arguments to a decorator like @Component?\r\n// By creating a function that returns a decorator\r\nfunction ToDoTask(config) {\r\n  return function(target) {\r\n    Object.defineProperty(target.prototype, 'GetToDoTask', { value: () => config.ToDoTask });\r\n    Object.defineProperty(target.prototype, 'GetCompletedTask', { value: () => config.CompletedTask });\r\n  };\r\n}\r\n\r\n@ToDoTask({\r\n  ToDoTask: 'Learn Angular 2',\r\n  CompletedTask: 'Set up Angular/Node development server'\r\n})\r\nclass MyTask {\r\n  task: string;\r\n\r\n  constructor (aTask) {\r\n    this.task = aTask;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements AfterViewInit, AfterContentInit {\r\n  // Here, we prepend the 'jokeViewChild' property with a decorator of ViewChild\r\n  // This decorator tells Angular HOW to find the child component that we want to bind to this property//\r\n  // This means, search inside this component's template, its view, for this child component.\r\n  @ViewChild(JokeComponent) jokeViewChild: JokeComponent;\r\n  @ViewChild('header') headerElm: ElementRef;\r\n\r\n  // The above elements are the VIEW children of this component\r\n  // Here, we are referencing the CONTENT children of this component.\r\n  // These are the content children of this component that are PROJECTED into the component from the host component\r\n  @ContentChild(JokeComponent) jokeContentChild: JokeComponent;\r\n  @ContentChildren(JokeComponent) jokeContentChildren: JokeComponent;\r\n\r\n  title = 'The world of Angular 5';\r\n\r\n  p = new Student('Franky', 'Maslim', 'Computer Science');\r\n  name = this.p.whoAreYou();\r\n  // lesson = this.p.lesson(); // This is weird. Even though it complains about lesson not existing, but it actually works\r\n\r\n  t = new MyTask('Angular 5');\r\n  currentTask = this.t.task;\r\n  // todoTask = this.t.GetToDoTask();\r\n  // completedTask = this.t.GetCompletedTask();\r\n\r\n  jokes: Joke[] = [\r\n    new Joke('Test 100', 'Test description 100'),\r\n    new Joke('Test 200', 'Test description 200')\r\n  ];\r\n\r\n  customers: any[] = [\r\n    {\r\n      country: 'USA',\r\n      people: [\r\n        {\r\n          name: 'John Doe'\r\n        },\r\n        {\r\n          name: 'Jane Doe'\r\n        },\r\n        {\r\n          name: 'John Smith'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      country: 'Indonesia',\r\n      people: [\r\n        {\r\n          name: 'David Maslim'\r\n        },\r\n        {\r\n          name: 'Franky Maslim'\r\n        },\r\n        {\r\n          name: 'Andrew Maslim'\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  ngAfterViewInit() {\r\n    // Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\r\n    // Add 'implements AfterViewInit' to the class.\r\n    this.headerElm.nativeElement.textContent = 'This header is set in AfterViewInit';\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    // Called after ngOnInit when the component's or directive's content has been initialized.\r\n    // Add 'implements AfterContentInit' to the class.\r\n\r\n  }\r\n\r\n  addJoke(joke: Joke) {\r\n      this.jokes.push(new Joke(joke.UserID, joke.Username));\r\n  }\r\n}\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n// This links the form model in a component with the HTML template\r\nimport { ReactiveFormsModule, FormsModule, Validators } from '@angular/forms';\r\nimport { ValidationErrors } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { JokeComponent } from './joke/joke.component';\r\nimport { JokeFormComponent } from './joke-form/joke-form.component';\r\nimport { JokeDirDirective } from './Directives/jokeDir.directive';\r\nimport { RxObservableComponent } from './rx-observable/rx-observable.component';\r\nimport { ModelDrivenFormComponent } from './model-driven-form/model-driven-form.component';\r\nimport { TemplateDrivenFormComponent } from './template-driven-form/template-driven-form.component';\r\nimport { InjectorComponent, OtherService, SimpleService } from './injector/injector.component';\r\nimport { InjectorProviderComponent, ChildComponent, ParentComponent } from './injector-provider/injector-provider.component';\r\nimport { SimpleProviderService } from './injector-provider/injector-provider.component';\r\nimport { HttpComponent } from './http/http.component';\r\nimport { HttpModule } from '@angular/http';\r\nimport { HttpPromiseComponent, SearchService } from './http-promise/http-promise.component';\r\nimport { HttpObservableComponent } from './http-observable/http-observable.component';\r\nimport { HttpJsonpComponent } from './http-jsonp/http-jsonp.component';\r\nimport { Jsonp, JsonpModule, Response } from '@angular/http';\r\nimport { NavHomeComponent } from './nav-home/nav-home.component';\r\n\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\n// In order for Angular to display certain components based on the requested URL,\r\n// set up the mapping of URLs to Components via Route Configuration\r\n// which is an array like so:\r\n\r\nconst routes: Routes = [\r\n  // For the special case of an empty URL, need to add pathMatch: 'full' property so Angular knows\r\n  // it should be matching exactly the empty string and not the partially empty string\r\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n  { path: 'home', component: NavHomeComponent },\r\n  { path: 'jsonp', redirectTo: 'httpjsonp' },\r\n  { path: 'joke', component: JokeComponent },\r\n  { path: 'injector', component: InjectorComponent },\r\n  { path: 'modeldriven', component: ModelDrivenFormComponent },\r\n  { path: 'templatedriven', component: TemplateDrivenFormComponent },\r\n  { path: 'http', component: HttpComponent },\r\n  { path: 'httppromise', component: HttpPromiseComponent },\r\n  { path: 'httpjsonp', component: HttpJsonpComponent },\r\n  // This is a catch-all route that gets directed to if there is no match for the requested route\r\n  { path: '**', component: HeaderComponent }\r\n];\r\n\r\n// Then, install the routes by importing RouterModule.forRoot(routes) into NgModule\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    JokeComponent,\r\n    JokeFormComponent,\r\n    JokeDirDirective,\r\n    RxObservableComponent,\r\n    ModelDrivenFormComponent,\r\n    TemplateDrivenFormComponent,\r\n    InjectorComponent,\r\n    InjectorProviderComponent,\r\n    ChildComponent,\r\n    ParentComponent,\r\n    HttpComponent,\r\n    HttpPromiseComponent,\r\n    HttpObservableComponent,\r\n    HttpJsonpComponent,\r\n    NavHomeComponent\r\n],\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule, // this needs to be imported here, before Form can recognize [FormGroup] directive\r\n    FormsModule, // this needs to be imported here. Otherwise, the <form></form> tag will not be recognized.\r\n    HttpModule,\r\n    JsonpModule,\r\n    RouterModule.forRoot(routes, { useHash: true }) // useHash is for Path Location Strategies\r\n  ],\r\n  providers: [OtherService, SimpleService, SimpleProviderService],\r\n  // these classes have to be imported in the import statement above\r\n\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/header/header.component.css\n// module id = ../../../../../src/app/header/header.component.css\n// module chunks = main","module.exports = \"<p>\\n  header works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/header/header.component.html\n// module id = ../../../../../src/app/header/header.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/header/header.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/http-jsonp/http-jsonp.component.css\n// module id = ../../../../../src/app/http-jsonp/http-jsonp.component.css\n// module chunks = main","module.exports = \"<app-nav-home></app-nav-home>\\n<form class=\\\"form-inline\\\">\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"search\\\"\\n           class=\\\"form-control\\\"\\n           placeholder=\\\"Enter search string\\\"\\n           [formControl]=\\\"searchField\\\">\\n  </div>\\n</form>\\n\\n<div class=\\\"text-center\\\">\\n  <p class=\\\"lead\\\" *ngIf=\\\"loading\\\">Loading...</p>\\n</div>\\n\\n<ul class=\\\"list-group\\\">\\n  <li class=\\\"list-group-item\\\" *ngFor=\\\"let item of results | async as list\\\">\\n    <img src=\\\"{{ item.thumbnail }}\\\">\\n    - <a href=\\\"{{ item.link }}\\\">{{ item.track }}</a>\\n  </li>\\n</ul>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/http-jsonp/http-jsonp.component.html\n// module id = ../../../../../src/app/http-jsonp/http-jsonp.component.html\n// module chunks = main","import { Component, OnInit, Injectable } from '@angular/core';\nimport { Jsonp } from '@angular/http';\nimport { SearchItem } from '../http-promise/http-promise.component';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/do';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\n\n// JSONP is a method of performing API requests that works around the issue of CORS\n// Unless an API sets certain headers in the response, a browser will reject it.\n// JSONP treats the API as if it is a javascript file. It dynamically adds the URL as if\n// it were a script tag\n\n// API that supports JSONP return something that looks like javascript. For example, it might return\n// process_response({hello: 'world'});\n\n// JSONP can only be used when:\n// 1. The API itself supports JSONP. It needs to return the JSON response wrapped in a function\n//    and it usually lets the caller pass in the function name.\n// 2. It can only be used with GET requests. No POST/PUT/DELETE and so on.\n\n@Injectable()\nexport class SearchService {\n  apiRoot = 'https://itunes.apple.com/search';\n\n  constructor(private jsonp: Jsonp) { // Here, we are using JSONP, instead of HTTP\n  }\n\n  search(term: string) {\n    const url = `${this.apiRoot}/term=${term}&media=music&limit=20&callback=JSONP_CALLBACK`;\n    return this.jsonp.request(url).map(response => {\n      return response.json().results.map(item => {\n        return new SearchItem(item.trackName\n                            , item.artistName\n                            , item.trackViewUrl\n                            , item.artworkUrl30\n                            , item.artistId);\n      });\n    });\n  }\n}\n\n@Component({\n  selector: 'app-http-jsonp',\n  templateUrl: './http-jsonp.component.html',\n  styleUrls: ['./http-jsonp.component.css'],\n  providers: [SearchService]\n})\nexport class HttpJsonpComponent implements OnInit {\n  searchField: FormControl;\n  loading: boolean;\n  results: Observable<SearchItem[]>;\n\n  constructor(public iTunesSearch: SearchService) { }\n\n  ngOnInit() {\n    this.searchField = new FormControl();\n    this.results = this.searchField.valueChanges\n                                  .debounceTime(400)\n                                  .distinctUntilChanged()\n                                  .do(() => this.loading = true)\n                                  .switchMap(term => this.iTunesSearch.search(term))\n                                  .do(() => this.loading = false);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/http-jsonp/http-jsonp.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/http-observable/http-observable.component.css\n// module id = ../../../../../src/app/http-observable/http-observable.component.css\n// module chunks = main","module.exports = \"<form class=\\\"form-inline\\\">\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"search\\\"\\n           class=\\\"form-control\\\"\\n           placeholder=\\\"Enter search string\\\"\\n           [formControl]=\\\"searchField\\\">\\n  </div>\\n\\n</form>\\n\\n<ul>\\n  <li *ngFor=\\\"let item of results | async as list\\\">\\n    <img [src]=\\\"item.thumbnail\\\"> -\\n    <a href=\\\"{{ item.link }}\\\">{{ item.name }}</a>\\n    by {{ item.artist }}\\n  </li>\\n</ul>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/http-observable/http-observable.component.html\n// module id = ../../../../../src/app/http-observable/http-observable.component.html\n// module chunks = main","import { Component, OnInit, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { SearchItem } from '../http-promise/http-promise.component';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/do';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Injectable()\nexport class SearchService {\n  apiRoot = 'https://iTunes.apple.com/search';\n\n  constructor(private http: Http) {\n  }\n\n  // In this observable example, make the search function RETURN an observable\n  // that the caller will subscribe to\n  search(term: string): Observable<SearchItem[]> {\n    const url = `${this.apiRoot}?term=${term}&media=music&limit=20`;\n    return this.http.get(url).map(response => { // map is an Observable operator, but to use it, import it from \"add\"\n      return response.json().results.map(item => {\n        return new SearchItem(item.trackName\n                            , item.artistName\n                            , item.trackViewUrl\n                            , item.artworkUrl30\n                            , item.artistId);\n      });\n    });\n  }\n}\n\n// By using Observable, both the component and the service are returning Observables.\n// And they need to be linked in order for them to work properly\n// The valueChanges call below is of type Observable<string>, and it needs to be changed to Observable<SearchItem[]>\n// To do that, use a chain of operators.\n\n@Component({\n  selector: 'app-http-observable',\n  templateUrl: './http-observable.component.html',\n  styleUrls: ['./http-observable.component.css'],\n  providers: [SearchService]\n})\nexport class HttpObservableComponent implements OnInit {\n  searchText: string;\n  loading = false;\n  // 1. See below - declaring this as an array is only used for storing the results locally\n  // results = [];\n\n  // 2. Instead, use a variable of type Observable (of type SearchItem array)\n  results: Observable<SearchItem[]>;\n\n  searchItems: SearchItem[];\n  searchField: FormControl;\n\n  constructor(public iTunesSearch: SearchService) { }\n\n  ngOnInit() {\n    this.searchField = new FormControl();\n    this.results = this.searchField.valueChanges\n                        .debounceTime(400)\n                        .distinctUntilChanged()\n                        .switchMap(term => this.iTunesSearch.search(term))\n                        .do(() => this.loading = false);\n  }\n\n  doSearch(keyword: string) {\n    this.loading = true;\n    // 1. This subscribes to the Observable and stores the results locally on the component\n    // this.iTunesSearch.search(keyword).subscribe(data => {\n    //   this.loading = false;\n    //   this.results = data;\n    // });\n\n    // 2. Instead of doing #1, use async pipe so results stores the Observable itself and not the array of SearchItems\n    this.iTunesSearch.search(keyword);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/http-observable/http-observable.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/http-promise/http-promise.component.css\n// module id = ../../../../../src/app/http-promise/http-promise.component.css\n// module chunks = main","module.exports = \"<app-nav-home></app-nav-home>\\n<form class=\\\"form-inline\\\">\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter search string\\\" #search>\\n  </div>\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"doSearch(search.value)\\\">Search</button>\\n</form>\\n\\n<div class=\\\"text-center\\\">\\n  <p class=\\\"lead\\\" *ngIf=\\\"loading\\\">\\n    Loading...\\n  </p>\\n</div>\\n\\n<br />\\n{{ iTunesSearch.iTunesApiText }}\\n<br />\\n<ul class=\\\"list-group\\\">\\n  <li class=\\\"list-group-item\\\" *ngFor=\\\"let track of iTunesSearch.results\\\">\\n    <img [src]=\\\"track.thumbnail\\\"> -\\n    <a target=\\\"_blank\\\" href=\\\"{{ track.link }}\\\">{{ track.name }}</a>\\n    by {{ track.artist }}\\n  </li>\\n</ul>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/http-promise/http-promise.component.html\n// module id = ../../../../../src/app/http-promise/http-promise.component.html\n// module chunks = main","import { Component, OnInit, Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\n\n// Decorate the class with Injectable so Angular knows it should inject the HTTP service\n// into the constructor\n@Injectable()\nexport class SearchService {\n  apiRoot = 'https://itunes.apple.com/search';\n  results: Object[];\n  loading: boolean;\n  iTunesApiText: string;\n\n  constructor(private http: Http) {\n    this.results = [];\n    this.loading = false;\n  }\n\n  search(term: string) {\n    // This function is going to make an asynchronous call using the http client lib\n    // to the iTunes API\n    // There are 2 ways to do that: Promises and Observables.\n\n    const promise = new Promise((resolve, reject) => {\n      // When the HTTP response comes back from the iTunes API, do processing and call\n      // resolve() function. This lets any interested parties know that the async task\n      // is complete and let them perform the next tasks.\n\n      // If the HTTP response returns an error, call the reject() function which\n      // again lets any interested parties know there was an error.\n\n      const apiURL = `${this.apiRoot}?term=${term}&media=music&limit=20`;\n      this.http.get(apiURL).toPromise().then(response => {\n        // Success\n        this.iTunesApiText = response.json().resultCount;\n        this.results = response.json().results.map(item => {\n          return new SearchItem(item.trackName\n                              , item.artistName\n                              , item.trackViewUrl\n                              , item.artworkUrl30\n                              , item.artistId);\n        });\n        // this.results = response.json().results;\n        resolve();\n      },\n        msg => {\n          reject(msg);\n      });\n    });\n\n    return promise;\n  }\n}\n\nexport class SearchItem {\n  constructor(public name: string\n            , public artist: string\n            , public link: string\n            , public thumbnail: string\n            , public artistID: string) {\n\n  }\n}\n\n@Component({\n  selector: 'app-http-promise',\n  templateUrl: './http-promise.component.html',\n  styleUrls: ['./http-promise.component.css'],\n  providers: [SearchService]\n})\nexport class HttpPromiseComponent implements OnInit {\n  searchText: string;\n  loading = false;\n\n  constructor(public iTunesSearch: SearchService) { }\n\n  ngOnInit() {\n  }\n\n  doSearch(keyword: string) {\n    // const result = this.iTunesSearch.search(keyword).resultCount);\n    this.loading = true;\n    this.iTunesSearch.search(keyword).then(() => this.loading = false);\n    this.searchText = keyword;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/http-promise/http-promise.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/http/http.component.css\n// module id = ../../../../../src/app/http/http.component.css\n// module chunks = main","module.exports = \"<app-nav-home></app-nav-home>\\n<div style=\\\"padding: 20px;\\\">\\n  <!-- GET ON ITUNES -->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"form-group\\\">\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"doGEToniTunes()\\\">GET on iTunes</button>\\n    </div>\\n    <div>\\n      Result: {{ doGEToniTunesText | json }}\\n    </div>\\n  </div>\\n\\n  <!-- GET -->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"form-group\\\">\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"doGET()\\\">GET</button>\\n    </div>\\n    <div>\\n      Result: {{ doGetText | json }}\\n    </div>\\n  </div>\\n\\n  <!-- POST -->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"form-group\\\">\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"doPOST()\\\">POST</button>\\n    </div>\\n    <div>\\n        Result: {{ doPostText }}\\n    </div>\\n  </div>\\n\\n  <!-- DELETE -->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"form-group\\\">\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"doDELETE()\\\">DELETE</button>\\n    </div>\\n    <div>\\n        Result: {{ doDeleteText }}\\n    </div>\\n  </div>\\n\\n  <!-- PUT -->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"form-group\\\">\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"doPUT()\\\">PUT</button>\\n    </div>\\n    <div>\\n        Result: {{ doPutText }}\\n    </div>\\n  </div>\\n\\n  <!-- GET AS PROMISE -->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"form-group\\\">\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"doGETasPromise()\\\">GET as Promise</button>\\n    </div>\\n    <div>\\n        Result: {{ doGETasPromiseText }}\\n    </div>\\n  </div>\\n\\n  <!-- GET AS PROMISE -->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"form-group\\\">\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"doGETasPromiseError()\\\">GET as Promise Error</button>\\n    </div>\\n    <div>\\n        Result: {{ doGETasPromiseErrorText }}\\n    </div>\\n  </div>\\n\\n  <!-- GET AS OBSERVABLE ERROR -->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"form-group\\\">\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"doGETasObservableError()\\\">GET as Obserable Error</button>\\n    </div>\\n    <div>\\n        Result: {{ doGETasObservableErrorText }}\\n    </div>\\n  </div>\\n\\n  <!-- GET WITH HEADERS -->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"form-group\\\">\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"doGETWithHeaders()\\\">GET With Headers</button>\\n    </div>\\n    <div>\\n        Result: {{ doGETWithHeadersText }}\\n    </div>\\n  </div>\\n\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/http/http.component.html\n// module id = ../../../../../src/app/http/http.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Http, URLSearchParams } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\nimport { Headers, RequestOptions } from '@angular/http';\n\n@Component({\n  selector: 'app-http',\n  templateUrl: './http.component.html',\n  styleUrls: ['./http.component.css']\n})\nexport class HttpComponent implements OnInit {\n  doGetText: string;\n  doPostText: string;\n  doDeleteText: string;\n  doPutText: string;\n\n  doGETasPromiseText: string;\n  doGETasPromiseErrorText: string;\n  doGETasObservableErrorText: string;\n  doGETWithHeadersText: string;\n\n  doGEToniTunesText: string;\n\n  apiRoot = 'http://httpbin.org';\n  constructor(private http: Http) { }\n\n  ngOnInit() {\n  }\n\n  doGEToniTunes() {\n    const url = `https://itunes.apple.com/search`;\n    const params = new URLSearchParams();\n    params.set('term', 'maroon 5');\n    params.set('collectionName', 'Songs About Jane');\n    params.set('limit', '10');\n    this.http.get(url, {params}).toPromise().then(response => this.doGEToniTunesText = response.json());\n  }\n\n  // To perform a GET request, call the get function on our HTTP client.\n  // This returns an observable. For now, subscribe to it and print out the response\n  doGET() {\n    // this.doGetText = 'doGET is clicked. This comes from the component (code-behind)';\n    const url = `${this.apiRoot}/get`;\n    const params = new URLSearchParams();\n    params.set('foo', 'moo');\n    params.set('limit', '25');\n    this.http.get(url, {params}).subscribe(response => this.doGetText = response.json());\n  }\n\n  // To perform a POST request, call the POST function on our HTTP client\n  // The second parameter is not a set of query parameters, but instead an object.\n  doPOST() {\n    // this.doPostText = 'doPOST is clicked. Hello POST!';\n    const url = `${this.apiRoot}/post`;\n    const payload = { foo: 'foo', moo: 'moo' };\n    const params = new URLSearchParams();\n    params.set('limit', '25');\n    this.http.post(url, {payload}, {params}).subscribe(response => this.doPostText = response.text());\n  }\n\n  // DELETE request is the same as GET. The format is exactly the same as GET\n  doDELETE() {\n    // this.doDeleteText = 'Hi, DELETE!';\n\n    const url = `${this.apiRoot}/delete`;\n    const params = new URLSearchParams();\n    params.set('foo', 'moo');\n    params.set('limit', '25');\n    this.http.delete(url, {params}).subscribe(response => this.doDeleteText = response.text());\n  }\n\n  // To perform a PUT  request, just call the PUT function on our HTTP client\n  // Works exactly the same as POST\n  doPUT() {\n    // this.doPutText = 'Man, PUT wants in on the action too!';\n    const url = `${this.apiRoot}/put`;\n    const payload = { foo: 'foo', moo: 'moo'};\n    const params = { 'limit': '25' };\n    this.http.put(url, {payload}, {params}).subscribe(response => this.doPutText = response.text());\n  }\n\n  // To use Promise, instead of Observable, call toPromise() after an observable is returned.\n  // toPromise is an operator. We need to explicitly import each operator we want to use\n  // import 'rxjs/add/operator/toPromise'\n  doGETasPromise() {\n    // this.doGETasPromiseText = 'Seriously? GET can make promises too?!';\n    const url = `${this.apiRoot}/get`;\n    const params = new URLSearchParams();\n    params.set('foo', 'foo');\n    params.set('moo', 'moo');\n    params.set('limit', '25');\n    this.http.get(url, {params}).toPromise().then(response => this.doGETasPromiseText = response.text());\n  }\n\n  // One way to handle errors is to send a POST request, but by calling a GET method.\n  doGETasPromiseError() {\n    // this.doGETasPromiseErrorText = 'LOL! When you promise a lot, you are bound to make some errors';\n    const url = `${this.apiRoot}/post`;\n    const payload = { foo: 'foo', moo: 'moo'};\n    const params = new URLSearchParams();\n    params.set('limit', '25');\n    this.http.get(url, {params}).subscribe(response => this.doGETasPromiseErrorText = response.text(),\n    msg => this.doGETasPromiseErrorText = msg);\n    // msg => this.doGETasPromiseErrorText = `${msg.status}` + '. ' + `${msg.statusText}`);\n  }\n\n  // Add a 2nd param after in the \"then\" call\n  doGETasObservableError() {\n    // this.doGETasObservableErrorText = 'What the! Get can also observe errors now? What has the world come to?';\n    const url = `${this.apiRoot}/post`;\n    const payload = { foo: 'foo', moo: 'moo'};\n    const params = new URLSearchParams();\n    params.set('limit', '25');\n    this.http.get(url, {params}).toPromise().then(response => this.doGETasObservableErrorText = response.text(),\n    msg => this.doGETasObservableErrorText = msg);\n  }\n\n  // To send headers with requests, import 2 helper classes from HTTP module\n  // { Headers and RequestOptions }\n  doGETWithHeaders() {\n    // this.doGETWithHeadersText = 'Looks like GET can change request headers too!';\n\n    // btoa converts a string to a base64\n    const headers = new Headers();\n    headers.append('Authorization', btoa('username:password'));\n    const options = new RequestOptions();\n    options.headers = headers;\n    const url = `${this.apiRoot}/get`;\n    this.http.get(url, options).subscribe(response => this.doGETWithHeadersText = response.text(),\n    msg => this.doGETWithHeadersText = `${msg.status}` + '. ' + `${msg.statusText}`);\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/http/http.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/injector-provider/injector-provider.component.css\n// module id = ../../../../../src/app/injector-provider/injector-provider.component.css\n// module chunks = main","module.exports = \"<p>\\n  injector-provider works!\\n</p>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/injector-provider/injector-provider.component.html\n// module id = ../../../../../src/app/injector-provider/injector-provider.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n// Injectors can be configured in 3 different ways:\n// A. On NgModule\n// B. On Components and Directives\n// C. On Components via viewProviders\n\n// Understanding WHERE to configure the provider is a key piece of understanding HOW to architect the application\n\nexport class SimpleProviderService {\n  value: string;\n}\n\n@Component({\n  selector: 'app-injector-provider',\n  templateUrl: './injector-provider.component.html',\n  styleUrls: ['./injector-provider.component.css']\n})\nexport class InjectorProviderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n@Component({\n  selector: 'app-injector-provider-child',\n  template: `\n    <div class=\"child\">\n      <p>Child</p>\n      {{ service.value }}\n    </div>\n  `\n})\nexport class ChildComponent implements OnInit {\n\n  constructor (public service: SimpleProviderService) { }\n\n  ngOnInit() {\n  }\n}\n\n@Component({\n  selector: 'app-injector-provider-parent',\n  template: `\n      <div class=\"parent\">\n        <p>Parent</p>\n        <form novalidate>\n          <div class=\"form-group\">\n            <input type=\"text\"\n                   class=\"form-control\"\n                   name=\"value\"\n                   [(ngModel)]=\"service.value\">\n          </div>\n        </form>\n        <ng-content></ng-content>\n      </div>\n    `,\n    viewProviders: [SimpleProviderService]\n    // By using ViewProviders, it creates an injector which is only used by this component\n    // and any view children.\n    // That is the difference between content (providers) and view children (view providers).\n    // For a content child, it uses the injector from NgModule\n})\nexport class ParentComponent implements OnInit {\n\n  constructor (public service: SimpleProviderService) {  }\n\n  ngOnInit() {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/injector-provider/injector-provider.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/injector/injector.component.css\n// module id = ../../../../../src/app/injector/injector.component.css\n// module chunks = main","module.exports = \"<app-nav-home></app-nav-home>\\n<p>\\n  injector works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/injector/injector.component.html\n// module id = ../../../../../src/app/injector/injector.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ReflectiveInjector, InjectionToken, Inject } from '@angular/core';\n\nexport class MandrillService {}\nexport class SendGridService {}\n\nlet injector = ReflectiveInjector.resolveAndCreate([\n  MandrillService, SendGridService\n]);\n\nlet emailService = injector.get(MandrillService);\nconsole.log(emailService);\n\n// Dependency caching\n// Multiple calls to the same injector for the same token will return the same instance\nconst emailService1 = injector.get(MandrillService);\nconst emailService2 = injector.get(MandrillService);\nconsole.log(emailService1 === emailService2); // true\n\n// A different injector for the same token might return a different instance of a dependency\n// but the same injector will always return the same instance.\nemailService1.foo = 'moo';\nconsole.log(emailService2.foo); // moo\n\n// Child injectors\n// These injectors behave like a regular injector, with a few additions\n// A. Each injector creates its own instance of a dependency\n// B. Child injectors forward requests to their parent inject if they can't resolve the token locally\n\n// To configure a provider so that it returns different dependency, use the same token and different dependency class, like so:\nlet injector2 = ReflectiveInjector.resolveAndCreate([{\n  provide: 'EmailService', useClass: MandrillService\n  }]);\n// To get a different dependency, use the same token, but return a different dependency\ninjector2 = ReflectiveInjector.resolveAndCreate([{\n  provide: 'EmailService', useClass: SendGridService\n}]);\n\n// Now, call \"get\" to get an instance of the dependecy, by passing in the token\nemailService = injector2.get('EmailService');\n\n// The above \"useClass\" dependency is only 1 way to configure ReflectiveInjector\n// { provide: \"\", useClass: className }\n// There are 3 other ways:\n// A. UseExisting -\n// { provide: GenericEmailService, useClass: GenericEmailService }\n// { provide: MandrillService, useExisting: GenericEmailService }\n// { provide: SendGridService, useExisting: GenericEmailService }\n\n// These providers return the same instance of GenericEmailService\n\n// B. value\ninjector = ReflectiveInjector.resolveAndCreate([{\n  provide: 'APIKey', useValue: '123456XYZ'\n}]);\nconst apiKey = injector.get('APIKey');\n\n// Or, we can also pass an object\ninjector = ReflectiveInjector.resolveAndCreate([{\n  provide: 'Config',\n  useValue: Object.freeze({ // this makes the properties and values read-only\n    'APIKey': '123456ABCXYZ',\n    'APISecret': '123-456-7890'\n  })\n}]);\nconst config = injector.get('Config');\n// console.log(config.APIKey);\n// console.log(config.APISecret);\n\n// C. useFactory\n// The provider can also be configured to call a function every time a token is required, leaving it\n// to the provider to figure out what to return.\nconst isProd = true;\ninjector = ReflectiveInjector.resolveAndCreate([{\n  provide: 'EmailService',\n  useFactory: () => {\n    return isProd ? new MandrillService() : new SendGridService();\n  }\n}]);\n\nemailService = injector.get('EmailService');\nconsole.log(emailService);\n\n// Token can be done in 3 ways: a string token, a type/class token, or an injection token\nconst EmailService = new InjectionToken('EmailService');\ninjector = ReflectiveInjector.resolveAndCreate([{\n  provide: EmailService, useClass: SendGridService\n}]);\n\nemailService = injector.get(EmailService);\nconsole.log(emailService);\n\n// Using Dependency Injection (DI) in Angular\n// When Angular creates a component, it uses the DI framework to figure out what to pass to the component\n// class constructor as parameters\n// However, we may need to give Angular some hints by using either the @Inject or @Injectable decorators.\nexport class OtherService {\n  constructor() { }\n}\n\nexport class SimpleService {\n  otherService: OtherService;\n\n  // This doesn't work. We need to explicitly tell Angular what we want injected for the otherService parameter\n  // constructor(otherService: OtherService) {\n  //   this.otherService = otherService;\n  //  }\n\n  // So use an @Inject decorator like so\n  constructor(@Inject(OtherService)otherservice: OtherService) {\n    this.otherService = otherservice;\n  }\n  // If there are multiple parameters that need to be decorated with @Inject,\n  // there is a better way to do it, by marking the class with @Injectable\n}\n\n// ViewProvider creates a special injector that resolves dependencies only for THIS component's view children, and doesn't act as a parent\n@Component({\n  selector: 'app-injector',\n  templateUrl: './injector.component.html',\n  styleUrls: ['./injector.component.css'],\n  providers: [MandrillService, SendGridService], // Configured to use these classes as providers\n  viewProviders: [MandrillService] // See comments above\n})\nexport class InjectorComponent implements OnInit {\n\n  // This makes Angular resolve and create a SimpleService by requesting it from the parent NgModule\n  constructor(private simpleService: SimpleService) { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/injector/injector.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".card {\\r\\n  border: 1px solid Blue;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/joke-form/joke-form.component.css\n// module id = ../../../../../src/app/joke-form/joke-form.component.css\n// module chunks = main","module.exports = \"<p class=\\\"card\\\">\\n  joke-form works!\\n  <br />\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)='createJoke()'>Add Joke</button>\\n</p>\\n\\n<br />\\nNumber of fake people in array: {{ people.length }}\\n<br />\\n<ul *ngFor=\\\"let person of people\\\">\\n  <li class=\\\"directive-class\\\" *ngIf=\\\"person.name === 'Facebook Inc' \\\" appJokeDir>\\n    Age: {{ person.age }}.\\n    Name: {{ person.name }}\\n  </li>\\n</ul>\\n\\n<br />\\n<ul *ngFor=\\\"let person of people\\\" [ngSwitch]=\\\"person.name\\\">\\n  <li *ngSwitchCase=\\\"'Facebook Inc'\\\">\\n    <span [ngStyle]=\\\"{'color':'green'}\\\">\\n      Age: {{ person.age }}.\\n      Name: {{ person.name }}\\n    </span>\\n  </li>\\n  <li *ngSwitchCase=\\\"'Yahoo Inc'\\\">\\n      <span [ngStyle]=\\\"{'color':'red'}\\\">\\n        Age: {{ person.age }}.\\n        Name: {{ person.name }}\\n      </span>\\n  </li>\\n  <li *ngSwitchDefault>\\n      <span [ngStyle]=\\\"{'color':'blue'}\\\">\\n        Age: {{ person.age }}.\\n        Name: {{ person.name }}\\n      </span>\\n  </li>\\n</ul>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/joke-form/joke-form.component.html\n// module id = ../../../../../src/app/joke-form/joke-form.component.html\n// module chunks = main","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { Joke } from '../joke/joke.component';\n\nexport class FakePerson {\n  age: number;\n  name: string;\n\n  constructor (age: number, name: string) {\n    this.age = age;\n    this.name = name;\n  }\n}\n\n@Component({\n  selector: 'app-joke-form',\n  templateUrl: './joke-form.component.html',\n  styleUrls: ['./joke-form.component.css']\n})\nexport class JokeFormComponent implements OnInit {\n  @Output() jokeCreated = new EventEmitter<Joke>();\n\n  // Example of NgIf\n  // Difference between [hidden]='false' and ngIf='false' is [hidden] only hides the element, but it still exists in the page.\n  // ngIf completely removes the element from the DOM\n  people: FakePerson[] = [\n    new FakePerson(10, 'Racami LLC'),\n    new FakePerson(20, 'Google Inc'),\n    new FakePerson(30, 'Yahoo Inc'),\n    new FakePerson(40, 'Microsoft Inc'),\n    new FakePerson(50, 'Facebook Inc'),\n  ];\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  createJoke() {\n    this.jokeCreated.emit(new Joke('Blah', 'Blah from inside joke-form component'));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/joke-form/joke-form.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".card {\\r\\n  border: 1px solid Red;\\r\\n}\\r\\n\\r\\n.background-blue {\\r\\n  background-color: cornflowerblue;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/joke/joke.component.css\n// module id = ../../../../../src/app/joke/joke.component.css\n// module chunks = main","module.exports = \"<app-nav-home></app-nav-home>\\n<div class=\\\"\\\">\\n  <h2>joke works!</h2>\\n\\n  <div>\\n    User ID: <ng-content select='.userID'></ng-content>\\n    <br />\\n    Username: <ng-content select='.username'></ng-content>\\n    <br />\\n    Hide: {{ data.Hide }}\\n  </div>\\n\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/joke/joke.component.html\n// module id = ../../../../../src/app/joke/joke.component.html\n// module chunks = main","import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\nexport class Joke {\n  UserID: string;\n  Username: string;\n  Hide: boolean;\n\n  constructor (userid: string, username: string) {\n    this.UserID = userid;\n    this.Username = username;\n    this.Hide = false;\n  }\n\n  toggle() {\n    this.Hide = !this.Hide;\n  }\n}\n\n// ViewEncapsulation allows us to set the style of a component without it leaking outside the scope of the component\n// 3 enum values:\n// ViewEncapsulation.Native\n// ViewEncapsulation.Emulated -- default value.\n// ViewEncapsulation.None\n\n@Component({\n  selector: 'app-joke',\n  templateUrl: './joke.component.html',\n  styleUrls: ['./joke.component.css'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class JokeComponent implements OnInit {\n  @Input() data: Joke;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.data = new Joke('New Joke', 'Created OnInit');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/joke/joke.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".has-danger input {\\r\\n  border: 2px solid Red;\\r\\n  background-color: pink;\\r\\n}\\r\\n\\r\\n.has-success input {\\r\\n  border: 2px solid green;\\r\\n  background-color: lightgreen;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/model-driven-form/model-driven-form.component.css\n// module id = ../../../../../src/app/model-driven-form/model-driven-form.component.css\n// module chunks = main","module.exports = \"<!-- The form below needs to be bound to the model in the component -->\\n<!-- And that is done by using the binding property on the form [formGroup]=\\\"myForm\\\" -->\\n\\n<app-nav-home></app-nav-home>\\n\\n<form [formGroup]=\\\"myForm\\\" style=\\\"width: 50%; padding: 20px;\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit Form</button>\\n\\n  <div *ngIf=\\\"showFormValues\\\">\\n    <p>First name: {{ firstName.value }}</p>\\n    <p>Last name: {{ lastName.value }}</p>\\n    <p>Email: {{ email.value }}</p>\\n    <p>Password: {{ password.value }}</p>\\n    <p>Language: {{ language.value }}</p>\\n  </div>\\n\\n  <!-- First Name and Last Name -->\\n  <fieldset formGroupName=\\\"name\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"firstName\\\">First Name: </label>\\n      <input type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             formControlName=\\\"firstName\\\"\\n\\t\\t\\t       required>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"lastName\\\">Last Name: </label>\\n      <input type=\\\"text\\\"\\n             id=\\\"lastName\\\"\\n             formControlName=\\\"lastName\\\"\\n             class=\\\"form-control\\\"\\n             required>\\n    </div>\\n  </fieldset>\\n\\n  <!-- Email -->\\n  <div class=\\\"form-group\\\" [ngClass]=\\\"{\\n    'has-danger': email.invalid && email.dirty,\\n    'has-success': email.valid && email.dirty }\\\">\\n    <label for=\\\"email\\\">Email: </label>\\n    <input type=\\\"text\\\"\\n           id=\\\"email\\\"\\n           class=\\\"form-control\\\"\\n           formControlName=\\\"email\\\"\\n           required>\\n    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"email.invalid && email.dirty\\\">\\n      Email is invalid\\n    </div>\\n  </div>\\n\\n\\n  <!-- Password -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"password\\\">Password: </label>\\n    <input type=\\\"password\\\"\\n           id=\\\"password\\\"\\n           formControlName=\\\"password\\\"\\n           class=\\\"form-control\\\"\\n           required>\\n    <div *ngIf=\\\"password.invalid && password.dirty\\\">\\n      <p *ngIf=\\\"password.errors.required\\\">Password is required</p>\\n      <p *ngIf=\\\"password.errors.minLength\\\">Password must be longer than 5 characters</p>\\n    </div>\\n  </div>\\n\\n  <!-- Language dropdown -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"language\\\">Language: </label>\\n    <select class=\\\"form-control\\\" formControlName=\\\"language\\\">\\n      <option value=\\\"\\\">Please select a language</option>\\n      <option *ngFor=\\\"let lang of languages\\\" [value]=\\\"lang.ID\\\">{{ lang.Name }}</option>\\n    </select>\\n  </div>\\n\\n  <pre>First name touched? {{ firstName.touched }}</pre>\\n\\n  <p>{{ languages | json }}</p>\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/model-driven-form/model-driven-form.component.html\n// module id = ../../../../../src/app/model-driven-form/model-driven-form.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { FormGroupName } from '@angular/forms';\n\n@Component({\n  selector: 'app-model-driven-form',\n  templateUrl: './model-driven-form.component.html',\n  styleUrls: ['./model-driven-form.component.css']\n})\nexport class ModelDrivenFormComponent implements OnInit {\n  myForm: FormGroup;\n  firstName: FormControl;\n  lastName: FormControl;\n  email: FormControl;\n  password: FormControl;\n  language: FormControl;\n  submitText: string;\n  showFormValues: boolean;\n\n  languages: any[] = [\n    { ID: 'English', Name: 'English' },\n    { ID: 'French', Name: 'French' },\n    { ID: 'German', Name: 'German' },\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n    this.createFormControls();\n    this.createForm();\n  }\n\n  createFormControls() {\n    this.firstName = new FormControl('', Validators.required);\n    this.lastName = new FormControl('', Validators.required);\n    this.email = new FormControl('', [Validators.required, Validators.email]);\n    this.password = new FormControl('', [Validators.required, Validators.minLength(5)]);\n    this.language = new FormControl('', Validators.required);\n  }\n\n  createForm() {\n    this.myForm = new FormGroup({\n      name: new FormGroup({\n        firstName: this.firstName,\n        lastName: this.lastName\n      }),\n      email: this.email,\n      password: this.password,\n      language: this.language\n    });\n  }\n\n  onSubmit() {\n    this.showFormValues = true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/model-driven-form/model-driven-form.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/nav-home/nav-home.component.css\n// module id = ../../../../../src/app/nav-home/nav-home.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-light bg-faded\\\" style=\\\"border: 1px solid Red; padding: 20px;\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"/#/\\\">iTunes Search App</a>\\n  <ul class=\\\"nav navbar-nav\\\">\\n    <li class=\\\"nav-item active\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"/#/\\\">Home</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"/#/jsonp\\\">HTTP JSONP</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"/#/joke\\\">Joke</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"/#/injector\\\">Injector</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"/#/modeldriven\\\">Model-driven</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"/#/templatedriven\\\">Template-driven</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"/#/http\\\">HTTP</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"/#/httppromise\\\">HTTP Promise</a>\\n    </li>\\n  </ul>\\n</nav>\\n<br />\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/nav-home/nav-home.component.html\n// module id = ../../../../../src/app/nav-home/nav-home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-home',\n  templateUrl: './nav-home.component.html',\n  styleUrls: ['./nav-home.component.css']\n})\nexport class NavHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/nav-home/nav-home.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/rx-observable/rx-observable.component.css\n// module id = ../../../../../src/app/rx-observable/rx-observable.component.css\n// module chunks = main","module.exports = \"<p>\\n  rx-observable works!\\n</p>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/rx-observable/rx-observable.component.html\n// module id = ../../../../../src/app/rx-observable/rx-observable.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport 'rxjs/add/observable/of';\nimport { Observable } from 'rxjs/Observable';\n\n// import * as Rx from 'rxjs/Rx';\n\n\n@Component({\n  selector: 'app-rx-observable',\n  templateUrl: './rx-observable.component.html',\n  styleUrls: ['./rx-observable.component.css']\n})\nexport class RxObservableComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/rx-observable/rx-observable.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".has-danger input {\\r\\n  border: 2px solid Red;\\r\\n  background-color: pink;\\r\\n}\\r\\n\\r\\n.has-success input {\\r\\n  border: 2px solid green;\\r\\n  background-color: lightgreen;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/template-driven-form/template-driven-form.component.css\n// module id = ../../../../../src/app/template-driven-form/template-driven-form.component.css\n// module chunks = main","module.exports = \"<!--\\n  In template-driven approach, Angular creates the model, FormGroups and FormControls, for us via directives we add to the template.\\n  Template-Driven Forms are just Model-Driven Forms but driven by directives in the template, versus code in the component.\\n  In template-driven, we use directives to create the model.\\n  In model-driven, we create a model in the component, and then use directives to map elements in the template to our form model.\\n-->\\n\\n<app-nav-home></app-nav-home>\\n\\n<form #f=\\\"ngForm\\\" style=\\\"width: 50%; padding: 10px;\\\">\\n\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"OnSubmit()\\\" [disabled]=\\\"f.invalid\\\">Submit</button>\\n  <p>\\n    {{ onSubmitText }}\\n  </p>\\n\\n  <pre>First Name: {{ firstName.value }}</pre>\\n  <pre>Last Name: {{ lastName.value }}</pre>\\n  <pre>Email: {{ email.value }}</pre>\\n  <pre>Password: {{ password.value }}</pre>\\n  <pre>Language: {{ language.value }}</pre>\\n\\n  <fieldset ngModelGroup=\\\"name\\\">\\n    <!-- FIRST NAME -->\\n    <div class=\\\"form-group\\\">\\n      <label>First Name: </label>\\n      <input type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             name=\\\"firstName\\\"\\n             [(ngModel)]=\\\"model.firstName\\\"\\n             #firstName=\\\"ngModel\\\"\\n             required>\\n    </div>\\n    <!-- LAST NAME -->\\n    <div class=\\\"form-group\\\">\\n      <label>Last Name:</label>\\n      <input type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             name=\\\"lastName\\\"\\n             [(ngModel)]=\\\"model.lastName\\\"\\n             #lastName=\\\"ngModel\\\">\\n    </div>\\n  </fieldset>\\n\\n  <!-- EMAIL -->\\n  <div class=\\\"form-group\\\">\\n    <label>Email:</label>\\n    <input type=\\\"text\\\"\\n           class=\\\"form-control\\\"\\n           name=\\\"email\\\"\\n           [(ngModel)]=\\\"model.email\\\"\\n           #email=\\\"ngModel\\\"\\n           required>\\n  </div>\\n\\n  <!-- PASSWORD -->\\n  <div class=\\\"form-group\\\">\\n    <label>Password: </label>\\n    <input type=\\\"text\\\"\\n           class=\\\"form-control\\\"\\n           name=\\\"password\\\"\\n           [(ngModel)]=\\\"model.password\\\"\\n           #password=\\\"ngModel\\\"\\n           required\\n           minlength=\\\"5\\\">\\n  </div>\\n\\n  <!-- LANGUAGE -->\\n  <div class=\\\"form-group\\\">\\n    <label>Language: </label>\\n    <select class=\\\"form-control\\\"\\n            name=\\\"language\\\"\\n            [(ngModel)]=\\\"model.language\\\"\\n            #language=\\\"ngModel\\\">\\n      <option value=\\\"\\\">Please select a language</option>\\n      <option *ngFor=\\\"let language of langs\\\" [value]=\\\"language\\\">{{ language }}</option>\\n    </select>\\n  </div>\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/template-driven-form/template-driven-form.component.html\n// module id = ../../../../../src/app/template-driven-form/template-driven-form.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n// import { FormGroupName } from '@angular/forms';\nimport { FormsModule, FormGroup, FormControl } from '@angular/forms';\nimport { ViewChild } from '@angular/core';\n\n\nclass Person {\n  constructor (\n    public firstName: string = '',\n    public lastName: string = '',\n    public email: string = '',\n    public password: string = '',\n    public language: string = ''\n  ) {\n  }\n}\n\n@Component({\n  selector: 'app-template-driven-form',\n  templateUrl: './template-driven-form.component.html',\n  styleUrls: ['./template-driven-form.component.css']\n})\nexport class TemplateDrivenFormComponent implements OnInit {\n\n  // In the model-driven approach, the form is reset by calling the reset() function on myForm model\n  // In template-driven approach, there is no access to the component from the template. The only access\n  // available is the f reference variable.\n\n  // However, there is a way to get a reference to the ngForm instance here in the component\n  // by using a ViewChild decorator.\n  // This decorator gives the component a reference to something in the template\n  @ViewChild('f') form: any;\n\n  model: Person = new Person();\n  onSubmitText: string;\n  langs: any[] = [\n    'English',\n    'French',\n    'German'\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  OnSubmit() {\n    this.onSubmitText = 'First Name: ' + this.model.firstName +\n                    '. Last Name: ' + this.model.lastName;\n\n    // This line is used to reset form using the form reference variable in the template\n    // which is only available via the ViewChild decorator\n    // this.form.reset();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/app/template-driven-form/template-driven-form.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fmaslim/Documents/GitHub/FirstAngularApp/myFirstApp/src/main.ts"],"sourceRoot":"webpack:///"}